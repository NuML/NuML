name: Build Wheels

on:
  workflow_dispatch:
  release:
    types:
    - published
  
jobs:
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Optional, use if you use setuptools_scm


    - name: fetch libsbml / expat submodules
      shell: bash
      run: |
        git submodule update --init
        pushd libnuml/submodules/libSBML-dependencies  && git submodule update --init expat && popd
  

    - name: Build SDist
      run: |
        pushd libnuml
        cp src/bindings/python/setup.py .
        pipx run build --sdist
        echo "NUML_VERSION=$(cat VERSION.txt)" >> $GITHUB_ENV
        popd

    - uses: actions/upload-artifact@v4
      with:
        path: libnuml/dist/*.tar.gz
        name: libNUML-sdist
  
  build_wheels:
    needs: [make_sdist]
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-latest]
        python: ['cp39-*', 'cp310-*', 'cp311-*', 'cp312-*', 'cp313-*']

    steps:
    - uses: seanmiddleditch/gha-setup-ninja@master
  
    - name: Add msbuild to PATH (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Download sdist
      uses: actions/download-artifact@v4
      with:
        name: libNUML-sdist
        path: .

    - name: Unpack sdist
      shell: bash
      run: |
        ls -la
        tar zxf python_libnuml-*.tar.gz
        mv python_libnuml-*/* .
        rm -rf python_libnuml-*
        ls -la

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==2.23.2 swig==4.2.1 cmake==3.31.6

        # print versions
        python --version
        cmake --version
        swig -version
    - name: Build wheels
      env:
        CIBW_BUILD: ${{ matrix.python }}
        CIBW_SKIP: "*-musllinux* cp36-* cp37-* cp38-* *-win32"
      run: |
        python -m cibuildwheel --output-dir wheelhouse
  
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl
        name: libNUML-${{ matrix.os }}-${{ strategy.job-index }}
        
  merge_wheels:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: libNUML-*
        path: dist
    
    - name: Move wheels from dist subfolder to dist folder
      run: |
        find dist -name "*.whl" -exec mv {} dist/ \;
        find dist -name "*.tar.gz" -exec mv {} dist/ \;
        find dist -type d -empty -delete

    - uses: actions/upload-artifact@v4
      with:
        name: libNUML-combined
        path: dist
        

  upload_all:
    needs: [merge_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: libNUML-combined
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
